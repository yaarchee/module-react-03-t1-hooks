{"version":3,"sources":["components/CreateContactsForm/CreateContactsForm.module.css","components/AppHooks/CreateContactsForm/CreateContactsForm.module.css","components/ContactList/ContactList.module.css","components/AppHooks/ContactList/ContactList.module.css","components/AppHooks/App/App.module.css","components/CreateContactsForm/CreateContactsForm.js","components/ContactList/ListItem/ListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","components/AppHooks/CreateContactsForm/CreateContactsForm.js","components/AppHooks/ContactList/ListItem/ListItem.js","components/AppHooks/ContactList/ContactList.js","components/AppHooks/Filter/Filter.js","components/AppHooks/Section/Section.js","components/AppHooks/App/App.js","index.js"],"names":["module","exports","CreateContactsForm","state","name","tel","changeInputField","e","target","value","setState","submitForm","preventDefault","props","onAddContacts","reset","onSubmit","this","autoComplete","className","styles","contactForm","wrapLabels","type","onChange","required","pattern","title","Component","ListItem","phone","onRemove","onClick","ContactList","listData","removeContact","contactList","map","id","key","Filter","onSetFilter","Section","children","App","contacts","filter","addContacts","prevState","uuid","taskId","setFilterContact","showFilteredContacts","contact","toLowerCase","includes","console","log","contactsLocal","localStorage","getItem","JSON","parse","prevProps","snapshot","setItem","stringify","length","useState","setName","setTel","prevFilter","setContacts","setFilter","useEffect","localContactsData","wrapSections","newContact","filterParam","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3aa5ef9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"CreateContactsForm_contactForm__17REE\",\"wrapLabels\":\"CreateContactsForm_wrapLabels__lL4qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"CreateContactsForm_contactForm__3kVCK\",\"wrapLabels\":\"CreateContactsForm_wrapLabels__DAvkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__FfAli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1xJ8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapSections\":\"App_wrapSections__pwJLi\"};","import React, { Component } from 'react';\r\nimport styles from \"./CreateContactsForm.module.css\"\r\n\r\n\r\nexport default  class CreateContactsForm extends  Component{\r\n\r\n    state = {\r\n        name : \"\",\r\n        tel : \"\",\r\n\r\n    }\r\n\r\n    changeInputField =(e)=>{\r\n        const { name, value } = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    submitForm = (e)=>{\r\n        e.preventDefault()\r\n        this.props.onAddContacts(this.state.name, this.state.tel);\r\n        e.target.reset();\r\n        this.setState({name: \"\", tel: \"\"});\r\n        //this.props.onAddContacts(e.target.name.value, e.target.tel.value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.submitForm} autoComplete='off' className={styles.contactForm} >\r\n                <div className={styles.wrapLabels}>\r\n                    <label >\r\n                        Name\r\n                        <input type=\"text\" onChange={this.changeInputField} name=\"name\"  required value={this.state.name}/>\r\n                    </label>\r\n                    <label >\r\n                        Number\r\n                        <input type=\"tel\" onChange={this.changeInputField} name=\"tel\"  required  pattern=\"[0-9]{5,10}\" title=\"от 5 до 10 цифр\" value={this.state.tel}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" >Add Contact</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\n\r\nexport  default  function ListItem({name, phone , onRemove}) {\r\n\r\n    return(\r\n        <li className=\"listItem\" >\r\n            <p className=\"contactInfo\">{name}: {phone}</p>\r\n            <button onClick={onRemove} type={\"button\"}> remove </button>\r\n        </li>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport ListItem from \"./ListItem/ListItem\";\r\nimport styles from \"./ContactList.module.css\"\r\n\r\n\r\nexport default function ContactList ({listData, removeContact}) {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <ul className={styles.contactList}>\r\n            {listData.map(({id, name, phone})=>(\r\n                <ListItem  key={id} name={name} phone = {phone}  onRemove={()=>removeContact(id)}/>\r\n\r\n            ))}\r\n        </ul>\r\n    )\r\n}","import React, {Component} from \"react\";\r\n\r\nexport  default  function Filter({onSetFilter}) {\r\n    return(\r\n        <label >\r\n            Find contact by name\r\n            <input type=\"text\" onChange={(e)=>onSetFilter(e.target.value)}  />\r\n        </label>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport  default  function Section({children}) {\r\n    return(\r\n        <section>\r\n            {children}\r\n        </section>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport CreateContactsForm from \"../CreateContactsForm/CreateContactsForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport { uuid } from 'uuidv4';\r\nimport Filter from \"../Filter/Filter\";\r\nimport Section from \"../Section/Section\";\r\n\r\nexport default class  App extends Component{\r\n\r\n    state = {\r\n        contacts: [],\r\n        filter: \"\",\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n        const contactsLocal = localStorage.getItem('contacts');\r\n\r\n        if(contactsLocal){\r\n            this.setState({\r\n                contacts: JSON.parse(contactsLocal),\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('componentDidUpdate')\r\n        if (prevState.contacts !== this.state.contacts){\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    addContacts = (name, phone)=>{\r\n\r\n        this.setState(prevState=>({\r\n            contacts:[...prevState.contacts, {\r\n                name,\r\n                phone,\r\n                id: uuid(),\r\n            } ]\r\n        }))\r\n    }\r\n\r\n    getContactData(){\r\n        return this.state.contacts;\r\n    }\r\n\r\n    removeContact = (taskId) =>{\r\n        this.setState(prevState=>({\r\n                contacts:  prevState.contacts.filter(({id})=> id!==taskId)\r\n            }\r\n        ))\r\n    }\r\n\r\n    setFilterContact = (filter)=>{\r\n        this.setState({filter})\r\n    }\r\n\r\n    showFilteredContacts =() =>{\r\n        const { contacts, filter } = this.state;\r\n\r\n        return contacts.filter(contact=>contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n      return(\r\n          <>\r\n              <Section>\r\n                  <h2>Phonebook</h2>\r\n                  <CreateContactsForm onAddContacts={this.addContacts}/>\r\n              </Section>\r\n\r\n              {this.state.contacts.length>= 1 && (\r\n                  <Section>\r\n                      <h2>Contacts</h2>\r\n                      {this.state.contacts.length> 1 && (<Filter onSetFilter={this.setFilterContact}/>)}\r\n                      <ContactList listData={this.showFilteredContacts()} removeContact={this.removeContact} />\r\n                  </Section>\r\n              )}\r\n\r\n          </>\r\n      )\r\n    }\r\n\r\n\r\n}\r\n","import React, { useState} from 'react';\r\nimport styles from \"./CreateContactsForm.module.css\"\r\n\r\n\r\nexport default function CreateContactsForm ({onAddContacts}) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [tel, setTel] = useState('');\r\n\r\n    const changeInputField = (e)=>{\r\n        const { name, value } = e.target;\r\n        name===\"name\"? setName(prevFilter => value) : setTel(prevFilter => value)\r\n\r\n    }\r\n\r\n    const submitForm = (e)=>{\r\n        e.preventDefault();\r\n        onAddContacts(name, tel);\r\n        e.target.reset();\r\n        //this.props.onAddContacts(e.target.name.value, e.target.tel.value);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n            <form onSubmit={submitForm} autoComplete='off' className={styles.contactForm} >\r\n                <div className={styles.wrapLabels}>\r\n                    <label >\r\n                        Name\r\n                        <input type=\"text\" onChange={changeInputField} name=\"name\"  required value={name}/>\r\n                    </label>\r\n                    <label >\r\n                        Number\r\n                        <input type=\"tel\" onChange={changeInputField} name=\"tel\"  required  pattern=\"[0-9]{5,10}\" title=\"от 5 до 10 цифр\" value={tel}/>\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" >Add Contact</button>\r\n\r\n            </form>\r\n        )\r\n}\r\n\r\n\r\n// export default  class CreateContactsForm extends  Component{\r\n//\r\n//     state = {\r\n//         name : \"\",\r\n//         tel : \"\",\r\n//\r\n//     }\r\n//\r\n//     changeInputField =(e)=>{\r\n//         const { name, value } = e.target;\r\n//         this.setState({[name]: value});\r\n//     }\r\n//\r\n//     submitForm = (e)=>{\r\n//         e.preventDefault()\r\n//         this.props.onAddContacts(this.state.name, this.state.tel);\r\n//         e.target.reset();\r\n//         this.setState({name: \"\", tel: \"\"});\r\n//         //this.props.onAddContacts(e.target.name.value, e.target.tel.value);\r\n//     }\r\n//\r\n//     render() {\r\n//         return(\r\n//             <form onSubmit={this.submitForm} autoComplete='off' className={styles.contactForm} >\r\n//                 <div className={styles.wrapLabels}>\r\n//                     <label >\r\n//                         Name\r\n//                         <input type=\"text\" onChange={this.changeInputField} name=\"name\"  required value={this.state.name}/>\r\n//                     </label>\r\n//                     <label >\r\n//                         Number\r\n//                         <input type=\"tel\" onChange={this.changeInputField} name=\"tel\"  required  pattern=\"[0-9]{5,10}\" title=\"от 5 до 10 цифр\" value={this.state.tel}/>\r\n//                     </label>\r\n//                 </div>\r\n//\r\n//                 <button type=\"submit\" >Add Contact</button>\r\n//\r\n//             </form>\r\n//         )\r\n//     }\r\n// }","import React from \"react\";\r\n\r\n\r\nexport  default  function ListItem({name, phone , onRemove}) {\r\n\r\n    return(\r\n        <li className=\"listItem\" >\r\n            <p className=\"contactInfo\">{name}: {phone}</p>\r\n            <button onClick={onRemove} type={\"button\"}> remove </button>\r\n        </li>\r\n    )\r\n}","import React, {Component} from \"react\";\r\nimport ListItem from \"./ListItem/ListItem\";\r\nimport styles from \"./ContactList.module.css\"\r\n\r\n\r\nexport default function ContactList ({listData, removeContact}) {\r\n\r\n\r\n\r\n    return(\r\n        <ul className={styles.contactList}>\r\n            {listData.map(({id, name, phone})=>(\r\n                <ListItem  key={id} name={name} phone = {phone}  onRemove={()=>removeContact(id)}/>\r\n\r\n            ))}\r\n        </ul>\r\n    )\r\n}","import React, {Component} from \"react\";\r\n\r\nexport  default  function Filter({onSetFilter}) {\r\n    return(\r\n        <label >\r\n            Find contact by name\r\n            <input type=\"text\" onChange={(e)=>onSetFilter(e.target.value)}  />\r\n        </label>\r\n\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport  default  function Section({children}) {\r\n    return(\r\n        <section>\r\n            {children}\r\n        </section>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport CreateContactsForm from \"../CreateContactsForm/CreateContactsForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport { uuid } from 'uuidv4';\r\nimport Filter from \"../Filter/Filter\";\r\nimport Section from \"../Section/Section\";\r\nimport styles from './App.module.css'\r\n\r\n\r\nexport default  function  App() {\r\n\r\n    const [contacts, setContacts] = useState([]);\r\n    const [filter, setFilter] = useState(\"\");\r\n\r\n\r\n\r\n    const addContacts  = (name, phone)=>{\r\n        const newContact = {\r\n            name,\r\n            phone,\r\n            id: uuid(),\r\n        }\r\n\r\n        \r\n\r\n\r\n\r\n        setContacts(prevState => [...prevState, newContact]);\r\n\r\n        console.log(contacts, \"адд\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        const localContactsData =  JSON.parse(localStorage.getItem('contactsh'));\r\n        console.log(localContactsData, 'зашли')\r\n        localContactsData && setContacts(localContactsData);\r\n\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('contactsh', JSON.stringify(contacts));\r\n\r\n    },[contacts])\r\n\r\n\r\n    const removeContact = idx =>{\r\n        setContacts(prevState => prevState.filter(contact => contact.id !== idx))\r\n    }\r\n\r\n    const setFilterContact = filterParam =>{\r\n        setFilter(prevFilter => filterParam)\r\n    }\r\n\r\n\r\n    const showFilteredContacts = () =>{\r\n\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n          <>\r\n              <div className={styles.wrapSections}>\r\n                  <h2>Hooks</h2>\r\n                  <Section>\r\n                      <h2>Phonebook</h2>\r\n                      <CreateContactsForm onAddContacts={addContacts}/>\r\n                  </Section>\r\n\r\n                  {contacts.length>= 1 && (\r\n                      <Section>\r\n                          <h2>Contacts</h2>\r\n                          {contacts.length> 1 && (<Filter onSetFilter={setFilterContact}/>)}\r\n                          <ContactList listData={showFilteredContacts()} removeContact={removeContact} />\r\n                      </Section>\r\n                  )}\r\n              </div>\r\n\r\n\r\n          </>\r\n      )\r\n\r\n}\r\n\r\n// export default class  App extends Component{\r\n//\r\n//     state = {\r\n//         contacts: [],\r\n//         filter: \"\",\r\n//\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         console.log('componentDidMount')\r\n//         const contactsLocal = localStorage.getItem('contacts');\r\n//\r\n//         if(contactsLocal){\r\n//             this.setState({\r\n//                 contacts: JSON.parse(contactsLocal),\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps, prevState, snapshot) {\r\n//         console.log('componentDidUpdate')\r\n//         if (prevState.contacts !== this.state.contacts){\r\n//             localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//         }\r\n//\r\n//     }\r\n//\r\n//\r\n//     addContacts = (name, phone)=>{\r\n//\r\n//         this.setState(prevState=>({\r\n//             contacts:[...prevState.contacts, {\r\n//                 name,\r\n//                 phone,\r\n//                 id: uuid(),\r\n//             } ]\r\n//         }))\r\n//     }\r\n//\r\n//     getContactData(){\r\n//         return this.state.contacts;\r\n//     }\r\n//\r\n//     removeContact = (taskId) =>{\r\n//         this.setState(prevState=>({\r\n//                 contacts:  prevState.contacts.filter(({id})=> id!==taskId)\r\n//             }\r\n//         ))\r\n//     }\r\n//\r\n//     setFilterContact = (filter)=>{\r\n//         this.setState({filter})\r\n//     }\r\n//\r\n//     showFilteredContacts =() =>{\r\n//         const { contacts, filter } = this.state;\r\n//\r\n//         return contacts.filter(contact=>contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n//     }\r\n//\r\n//\r\n//\r\n//     render() {\r\n//\r\n//       return(\r\n//           <>\r\n//               <div className={styles.wrapSections}>\r\n//                   <h2>Hooks</h2>\r\n//                   <Section>\r\n//                       <h2>Phonebook</h2>\r\n//                       <CreateContactsForm onAddContacts={this.addContacts}/>\r\n//                   </Section>\r\n//\r\n//                   {this.state.contacts.length>= 1 && (\r\n//                       <Section>\r\n//                           <h2>Contacts</h2>\r\n//                           {this.state.contacts.length> 1 && (<Filter onSetFilter={this.setFilterContact}/>)}\r\n//                           <ContactList listData={this.showFilteredContacts()} removeContact={this.removeContact} />\r\n//                       </Section>\r\n//                   )}\r\n//               </div>\r\n//\r\n//\r\n//           </>\r\n//       )\r\n//     }\r\n//\r\n//\r\n// }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from  './components/App/App'\nimport AppHooks from './components/AppHooks/App/App'\nimport './styles.css'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <>\n          <App />\n          <AppHooks/>\n      </>\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}